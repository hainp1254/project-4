name: CI Front End

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_ACCOUNT_ID: 155241587390
  AWS_REGION: ${{ secrets.AWS_REGION }}
  IMAGE_REPO_NAME: mp-backend
  EKS_CLUSTER_NAME: eks-cluster

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: |
          cd ./starter/backend
          pipenv install

      - name: Run tests
        run: |
          cd ./starter/backend
          pipenv run test

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: |
          pip install flake8
          cd ./starter/backend
          pipenv install

      - name: Run tests
        run: |
          cd ./starter/backend
          pipenv run lint
  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v2

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: |
          cd ./starter/backend
          pipenv install

#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ env.AWS_REGION }}
#
#      - name: Login to Amazon ECR
#        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        env:
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          cd ./starter/backend
          docker build --cache-from=$IMAGE_REPO_NAME:$IMAGE_TAG -t $IMAGE_REPO_NAME:$IMAGE_TAG .
          docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
#          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

#      - name: deploy
#        run: |
#          aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
#          kustomize edit set image frontend=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
#          kustomize build | kubectl apply -f -
